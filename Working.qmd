---
title: "Working"
format: pdf
---

## Libraries

```{r}
library(lme4)
library(knitr)
library(tidyverse)
library(glmmTMB)
library(broom)
library(emmeans)
```


```{r}
data <- read.table("data.txt",header = TRUE, as.is = TRUE)
```


```{r}
data$Pass <- round(data$N * data$Pct)
data$Fail <- (data$N - data$Pass)
data$timeperiod <- rep(1, nrow(data))
data$timeperiod[data$Year > 2002] <- 2
data$timeperiod[data$Year > 2010] <- 3
data$timeperiod <- factor(data$timeperiod, levels = c(1, 2, 3), labels = c("tp1", "tp2", "tp3"))

```


```{r}
yP <- data.frame(Year = rep(data$Year, data$Pass), Pass = rep(1, sum(data$Pass)))
yF <- data.frame(Year = rep(data$Year, data$Fail), Pass = rep(0, sum(data$Fail)))
y <- rbind(yP, yF); rm(yP, yF)
y$timeperiod <- rep(1, nrow(y))
y$timeperiod[y$Year > 2002] <- 2
y$timeperiod[y$Year > 2010] <- 3
y$timeperiod <- factor(y$timeperiod, levels = c(1, 2, 3), labels = c("tp1", "tp2", "tp3"))
y$timeperiod <- relevel(y$timeperiod, ref = "tp2")

```


```{r}
glm.out0 <- glm(Pass ~timeperiod, family  = binomial(link=logit), data=y)

summary(glm.out0)$coefficients
```

## Exploratory Data Analysis
```{r}

# Plot One: Breaking Down Subsets 

# Add Reform Phasing Information
reform_phase_data <- data |>
  mutate(
    ReformPolicy = case_when(
      Year < 2003 ~ "No Reform",
      Year < 2006 ~ "Phasing in Reform One",
      Year < 2011 ~ "Reform One",
      Year < 2014 ~ "Phasing in Reform Two",
      Year < 2016 ~ "Reform Two"
    )
  ) 

# Create the Plot
reform_phase_data |>
  ggplot(aes(x = Year, y = Pct, color = ReformPolicy)) +
  geom_point(size = 2) +
    labs(
      x = "Year",
      y = "Medical Resident Exam Pass Rate",
      title = "Medical Resident Exam Pass Rate throughout Reforms"
    ) + 
  geom_vline(aes(xintercept = 2002.5)) + 
  geom_vline(aes(xintercept = 2005.5)) + 
  geom_vline(aes(xintercept = 2010.5)) +
  geom_vline(aes(xintercept = 2013.5)) +
  scale_color_grey() +
  theme_minimal()
    
```


## Random Effects
Below I made a random effect for the year. This is consider a binomial mixture model. 

```{r}
model <- glmer(
  Pass ~ timeperiod + (1 | Year),
  data = y,
  family = binomial(link = "logit")
)
```
```{r}
emm <- emmeans(model, ~ timeperiod, type = "response", re.form = NA)
step <- as.data.frame(emm)

nm_mean  <- intersect(names(step), c("response","prob","emmean"))[1]
nm_lower <- intersect(names(step), c("lower.CL","asymp.LCL"))[1]
nm_upper <- intersect(names(step), c("upper.CL","asymp.UCL"))[1]

step$response <- step[[nm_mean]]
step$lower.CL <- step[[nm_lower]]
step$upper.CL <- step[[nm_upper]]

step$xmin <- c(1996, 2003, 2011)
step$xmax <- c(2002, 2010, 2015)

ggplot(data, aes(x = Year, y = Pass/N)) +
  geom_point(color = "forestgreen") +
  geom_vline(xintercept = c(2003, 2011), color = "red3") +
  geom_segment(data = step,
               aes(x = xmin, xend = xmax, y = response, yend = response),
               inherit.aes = FALSE, color = "black", linewidth = 1) +
  geom_segment(data = step,
               aes(x = xmin, xend = xmax, y = lower.CL, yend = lower.CL),
               inherit.aes = FALSE, color = "black", linetype = "dotted") +
  geom_segment(data = step,
               aes(x = xmin, xend = xmax, y = upper.CL, yend = upper.CL),
               inherit.aes = FALSE, color = "black", linetype = "dotted") +
  labs(title = "Pass Rates by Year with GLMM (binomial) Step Fit",
       y = "Pass Rate") +
  coord_cartesian(ylim = c(0.80, 0.96)) +
  theme_minimal()
```








## Beta-Binomial

```{r}
beta_binomial_model <- glmmTMB(
  cbind(Pass, Fail) ~ timeperiod,
  data = data,
  family = betabinomial(link = "logit")
)

summary(beta_binomial_model)
```
```{r}
newdat <- data.frame(timeperiod = levels(data$timeperiod))
pred <- predict(beta_binomial_model, newdata = newdat, type = "response", se.fit = TRUE)

newdat$fit <- pred$fit
newdat$se  <- pred$se.fit
newdat$lo  <- pmax(0, newdat$fit - 1.96*newdat$se)
newdat$hi  <- pmin(1, newdat$fit + 1.96*newdat$se)

newdat$xmin <- c(1996, 2003, 2011)
newdat$xmax <- c(2002, 2010, 2015)

ggplot(data, aes(x = Year, y = Pass/N)) +
  geom_point(color = "forestgreen") +
  geom_vline(xintercept = c(2003, 2011), color = "red3") +

  geom_segment(data = newdat,
               aes(x = xmin, xend = xmax, y = fit, yend = fit),
               inherit.aes = FALSE, color = "black", linewidth = 1) +
  geom_segment(data = newdat,
               aes(x = xmin, xend = xmax, y = lo, yend = lo),
               inherit.aes = FALSE, color = "black", linetype = "dotted") +
  geom_segment(data = newdat,
               aes(x = xmin, xend = xmax, y = hi, yend = hi),
               inherit.aes = FALSE, color = "black", linetype = "dotted") +

  labs(title = "Pass Rates by Year with Betaâ€“Binomial Fit (95% CI)",
       y = "Pass Rate") +
  coord_cartesian(ylim = c(0.80, 0.96)) +
  theme_minimal()
```

## Beta Binomial With Subset
```{r}
# Grouping Subsets

# Reform Data
reform_data <- data %>%
  filter(Year < 2003 | (Year >= 2006 & Year <= 2010) | (Year >= 2014 & Year <= 2015)) 
```

# Creating Beta Binomial Model with Subsets
```{r}
beta_binomial_model_subsets <- glmmTMB(
  cbind(Pass, Fail) ~ timeperiod,
  data = reform_data,
  family = betabinomial(link = "logit")
)

summary(beta_binomial_model_subsets)

tidy(beta_binomial_model_subsets, conf.int = TRUE) |>
  kable(digits = 3)
```


## Goodness of Fit


```{r}
AIC(model, beta_binomial_model, beta_binomial_model_subsets)

```



```{r}
residuals(model, type = "pearson")
```


```{r}

res1 <- resid(beta_binomial_model, type = "pearson")
res2 <- resid(beta_binomial_model_subsets, type = "pearson")

```

```{r}
plot(fitted(beta_binomial_model), res1)
abline(h=0, col="red")

plot(fitted(beta_binomial_model_subsets), res2)
abline(h=0, col="red")

```

